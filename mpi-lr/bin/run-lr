#!/bin/bash

WORK_DIR=`readlink -f $0`
WORK_DIR=`dirname $WORK_DIR`
WORK_DIR=`cd $WORK_DIR/../; pwd`

BIN_DIR="$WORK_DIR/bin"
CONF_DIR="$WORK_DIR/conf"
ts=`date +%s`
LOG_DIR="/tmp/run-lr-log-${USER}-$ts"

rm -rf $LOG_DIR
mkdir -p ${LOG_DIR}

source ~/.bashrc
source /home/a/share/phoenix/algo_db/common/script/algo_db_common.sh

HADOOP_CONF_DIR=`cd ~/conf; pwd`


VALID_FEATURE_HADOOP_PATH=${output}/valid
FEATURE_HADOOP_PATH=${output}/feature
TEST_INSTANCE_HADOOP_PATH=${output}/test/instance


#run the mpi phase

FEATURE_NUM=`${HADOOP_HOME}/bin/hadoop --config ${HADOOP_CONF_DIR} fs -cat ${VALID_FEATURE_HADOOP_PATH}/* | wc -l`
threadNum=`expr $nodes \* $ppn \* $cpuct`
  #compose a batch.inc file
  VALID_FEATURE_HADOOP_PATH_TMP=`echo ${VALID_FEATURE_HADOOP_PATH} | sed 's/\\//\\\\\//g'`
  FEATURE_HADOOP_PATH_TMP=`echo ${FEATURE_HADOOP_PATH} | sed 's/\\//\\\\\//g'`
  
  cp ${CONF_DIR}/batch.inc.template ${LOG_DIR}/batch.inc.tmp
  #   begin variable substitution
  cat ${LOG_DIR}/batch.inc.tmp \
      | sed "s/\[FEATURE_NUM\]/${FEATURE_NUM}/g" \
      | sed "s/\[VALID_FEATURE_HADOOP_PATH\]/${VALID_FEATURE_HADOOP_PATH_TMP}/g" \
      | sed "s/\[FEATURE_HADOOP_PATH\]/${FEATURE_HADOOP_PATH_TMP}/g" > ${LOG_DIR}/batch.inc
  rm ${LOG_DIR}/batch.inc.tmp -f
  
 
mrun --hadoop_config ${HADOOP_CONF_DIR} \
    -j $jobName \
    -i ${output}/instance \
    -o ${output}/model \
    -f ${BIN_DIR}/mpi-plr-train \
    -f ${BIN_DIR}/mpi-plr-score \
    -f ${BIN_DIR}/mpi_inslookup \
    -f ${LOG_DIR}/lr.inc \
    -f ${CONF_DIR}/log4cpp.conf \
    -f ${LOG_DIR}/logireg.conf \
    -f ${BIN_DIR}/mergeDict.sh \
    -f ${BIN_DIR}/moveFile.sh \
    -f ${BIN_DIR}/moveInsToEval.sh \
    -f ${BIN_DIR}/model_analysis.sh \
    -f ${BIN_DIR}/single_auc.sh \
    -f ${BIN_DIR}/pre-auc.sh \
    -f ${BIN_DIR}/mpi-peval \
    -f ${BIN_DIR}/transModel.awk \
    -f ${BIN_DIR}/filter_feature.awk \
    -f ${BIN_DIR}/filter_feature.sh \
    -f ${BIN_DIR}/feature_sign_to_feature_name.py \
    -f ${BIN_DIR}/mergeInsScore.sh \
    -b ${LOG_DIR}/batch.inc \
    -n ${nodes} \
    -p ${ppn} \
    -t ${cpuct} \
    -u ${user} \
    -q ${queue} \
    -r "${receiver}" \
    -w ${walltime} \
    -m ${pmem}
  if [ $? != 0 ]
  then
    log_error "run mpi failed"
    exit -1
  fi

  ${HADOOP_HOME}/bin/hadoop --config ${HADOOP_CONF_DIR} fs -mv ${output}/model/rank-00000/model* ${output}/model/
  if [ $? != 0 ]
  then
    log_error "hadoop fs -mv ${output}/model/rank-00000/model* ${output}/model/ failed"
    exit -1
  fi
  ${HADOOP_HOME}/bin/hadoop --config ${HADOOP_CONF_DIR} fs -mv ${output}/model/rank-00000/*.txt ${output}/model/
  if [ $? != 0 ]
  then
    log_error "hadoop fs -mv ${output}/model/rank-00000/*.txt ${output}/model/ failed"
    exit -1
  fi
  ${HADOOP_HOME}/bin/hadoop --config ${HADOOP_CONF_DIR} fs -mkdir ${output}/score
  if [ $? != 0 ]
  then
    log_error "hadoop fs -mkdir ${output}/score failed"
    exit -1
  fi
  ${HADOOP_HOME}/bin/hadoop --config ${HADOOP_CONF_DIR} fs -mv ${output}/model/rank-* ${output}/score/
  if [ $? != 0 ]
  then
    log_error "hadoop fs -mv ${output}/model/rank-* ${output}/score/ failed"
    exit -1
  fi
fi
